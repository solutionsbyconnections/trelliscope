% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/facet_panels.R
\name{facet_panels}
\alias{facet_panels}
\title{Add a trelliscope facet to a ggplot}
\usage{
facet_panels(
  facets,
  scales = "same",
  add_plot_metrics = FALSE,
  unfacet = c("none", "line", "point"),
  unfacet_col = "gray",
  unfacet_alpha = 0.4,
  data = ggplot2::waiver()
)
}
\arguments{
\item{facets}{A formula to facet the panels on. Similar to
\code{\link[ggplot2:facet_wrap]{ggplot2::facet_wrap()}}'s `facets``}

\item{scales}{Should scales be the same (\code{"same"}, the default),
free (\code{"free"}), or sliced (\code{"sliced"}). May provide a single string or
two strings, one for the X and Y axis respectively.}

\item{add_plot_metrics}{Should metrics about each panel be automatically
calculated? These metrics are based on the context of what is being
plotted, e.g. correlation coefficient if plot is a scatterplot.}

\item{unfacet}{Specifies whether to "unfacet" the data such that all of the
data appears in the background of the plot. Options are "none" (default),
"line" or "point". The latter two options will add either a line or point
layer, grouped by the faceting variables, underneath each panel. This is
useful for time series plots for viewing each panel in relation to others.}

\item{unfacet_col}{The color to use for the "unfacet" lines or points.}

\item{unfacet_alpha}{The alpha to use for the "unfacet" lines or points.}

\item{data}{data used for faceting. Defaults to the main data argument
to \code{\link[ggplot2:ggplot]{ggplot2::ggplot()}}.}
}
\description{
Add a trelliscope facet to a ggplot
}
\examples{
# You can run facet_panels() just like how you would run facet_wrap()
\dontrun{
library(ggplot2)

ggplot(gapminder, aes(year, lifeExp)) +
  geom_point() +
  facet_panels(~country + continent)
}

# facet_panels can also be a jumping off point into setting up a more 
# developed trelliscope by passing into `as_panels_df()` to create a nested
# trelliscope data frame for additional editing.
\dontrun{
library(ggplot2)
library(dplyr)

panel_dat <- (
  ggplot(gapminder, aes(year, lifeExp)) +
  geom_point() +
  facet_panels(~country + continent)
) |>
  as_panels_df()

trell_df <- panel_dat |>
  as_trelliscope_df(name = "life expectancy", path = "gapminder") |>
  set_default_layout(nrow = 2, ncol = 4) |>
  write_panels() |>
  write_trelliscope()

view_trelliscope(trell_df)
}
}
