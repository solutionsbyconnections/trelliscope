% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_trelliscope.R
\name{as_trelliscope_df}
\alias{as_trelliscope_df}
\title{Instantiate a trelliscope data frame}
\usage{
as_trelliscope_df(
  df,
  name = NULL,
  description = name,
  key_cols = NULL,
  tags = NULL,
  path = NULL,
  force_plot = FALSE,
  key_sig = NULL
)
}
\arguments{
\item{df}{A data frame that contains the metadata of the display as well as
a column that indicate the panels to be displayed.}

\item{name}{Name of the trelliscope display.}

\item{description}{Description of the trelliscope display.}

\item{key_cols}{Variable names in \code{df} that uniquely define a row of the
data. If not supplied, an attempt will be made to infer them.}

\item{tags}{Optional vector of tag names to identify the display in the
case that there are many to search through.}

\item{path}{Directory in which to place the trelliscope display when
it is written using \code{\link[=write_trelliscope]{write_trelliscope()}}.}

\item{force_plot}{Should the panels be forced to be plotted, even if they
have already been plotted and have not changed since the previous plotting?}

\item{key_sig}{A string "signature" that represents the panels for this
display. This should not be specified unless you know what you are doing.}
}
\description{
Instantiate a trelliscope data frame
}
\examples{
# Use `as_trelliscope_df()` to convert panel metadata to a special
# trelliscope data frame
\dontrun{
library(ggplot2)
library(dplyr)

panel_dat <- (
  ggplot(gapminder, aes(year, lifeExp)) +
    geom_point() +
    facet_panels(~country + continent)
  ) |>
    nest_panels()

meta_dat <- gapminder |>
  group_by(country, continent) |>
  summarise(
    mean_lifeExp = mean(lifeExp),
    min_lifeExp = min(lifeExp),
    max_lifeexp = max(lifeExp),
    mean_gdp = mean(gdpPercap),
    .groups = "drop"
  )

joined_dat <- left_join(panel_dat, meta_dat) |>
  as_trelliscope_df(name = "life_expectancy", path = tempfile())

disp <- joined_dat |>
  write_panels() |>
  write_trelliscope() |>
  view_trelliscope()
}

# You can also use `as_trelliscope_df()` on datasets that have links to
# images instead of conventional ggplot objects
\dontrun{
}
}
