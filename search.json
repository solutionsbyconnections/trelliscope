[{"path":"https://trelliscope.github.io/trelliscope/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 trelliscopejs authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"data-frames-of-visualizations","dir":"Articles","previous_headings":"","what":"Data frames of visualizations","title":"Introduction to Trelliscope","text":"basic principle behind design R package specify collection visualizations data frame, one column representing plot (either plot object ggplot reference image png, svg, even html file), columns representing metadata visualization. package provides utilities help build data frames explore interactive viewer.","code":""},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"pre-generated-images","dir":"Articles","previous_headings":"Data frames of visualizations","what":"Pre-generated images","title":"Introduction to Trelliscope","text":"simplest way illustrate mean data frame visualizations start example images already generated. example dataset comes package contains images captured Mars rover Curiosity. data frame column references images web. columns contain metadata images. can create Trelliscope data frame data frame following: simply data frame additional information render Trelliscope viewer app. minimum provide name resulting display path want output written, can also specify additional information descriptions tags. can also specify key_cols columns combined, uniquely identify row data. inferred provided sometimes might like , often many possibilities. see information trelliscope-specific settings, can use show_info(): Now view Trelliscope viewer app: can use viewer interactively explore images. many customization options covered throughout document.","code":"library(trelliscope)  mars_rover #> # A tibble: 1,245 × 11 #>       id camera   sol earth_date class width height filesize hex     hue img_src #>    <int> <chr>  <int> <date>     <chr> <int>  <int>    <int> <chr> <dbl> <chr>   #>  1  3560 Mars …   565 2014-03-09 hori…   192    144     5656 #7C6…  31.4 http:/… #>  2 74689 Mars …   565 2014-03-09 hori…  1632   1200   592880 #7B6…  32.9 http:/… #>  3  3558 Mars …   568 2014-03-12 wheel   192    144     9123 #3C3…  33.9 http:/… #>  4 74630 Mars …   568 2014-03-12 wheel  1632   1200   567528 #4F4…  31.1 http:/… #>  5 74631 Mars …   568 2014-03-12 wheel  1632   1200   556007 #4B4…  32.5 http:/… #>  6 74632 Mars …   568 2014-03-12 wheel  1632   1200   721995 #564…  33.1 http:/… #>  7 74633 Mars …   568 2014-03-12 wheel  1632   1200   511984 #433…  32.3 http:/… #>  8 74634 Mars …   568 2014-03-12 wheel  1632   1200   523267 #3C3…  32.3 http:/… #>  9 74635 Mars …   568 2014-03-12 wheel  1632   1200   580228 #3D3…  32.5 http:/… #> 10 74637 Mars …   568 2014-03-12 wheel   192    144    10522 #4E4…  32.3 http:/… #> # ℹ 1,235 more rows d <- as_trelliscope_df(mars_rover, name = \"mars rover\") #> ℹ Using img_src as image column #> ℹ Using the variable \"id\" to uniquely identify each row of the data.  d #> ℹ Trelliscope data frame. Call show_info() for more information #> # A tibble: 1,245 × 11 #>       id camera           sol earth_date class width height filesize hex     hue #>    <int> <chr>          <int> <date>     <chr> <int>  <int>    <int> <chr> <dbl> #>  1  3560 Mars Hand Len…   565 2014-03-09 hori…   192    144     5656 #7C6…  31.4 #>  2 74689 Mars Hand Len…   565 2014-03-09 hori…  1632   1200   592880 #7B6…  32.9 #>  3  3558 Mars Hand Len…   568 2014-03-12 wheel   192    144     9123 #3C3…  33.9 #>  4 74630 Mars Hand Len…   568 2014-03-12 wheel  1632   1200   567528 #4F4…  31.1 #>  5 74631 Mars Hand Len…   568 2014-03-12 wheel  1632   1200   556007 #4B4…  32.5 #>  6 74632 Mars Hand Len…   568 2014-03-12 wheel  1632   1200   721995 #564…  33.1 #>  7 74633 Mars Hand Len…   568 2014-03-12 wheel  1632   1200   511984 #433…  32.3 #>  8 74634 Mars Hand Len…   568 2014-03-12 wheel  1632   1200   523267 #3C3…  32.3 #>  9 74635 Mars Hand Len…   568 2014-03-12 wheel  1632   1200   580228 #3D3…  32.5 #> 10 74637 Mars Hand Len…   568 2014-03-12 wheel   192    144    10522 #4E4…  32.3 #> # ℹ 1,235 more rows #> # ℹ 1 more variable: `__PANEL_KEY__` <charactr> show_info(d) #> A trelliscope display #> • Name: \"mars rover\" #> • Description: \"mars rover\" #> • Tags: none #> • Key columns: \"id\" #> • Path: #>   \"/home/runner/work/trelliscope/trelliscope/docs/articles/trelliscope_files/figure-html//mars0\" #> • Number of panels: 1245 #> • Panels written: NA #> • Metadata variables that will be inferred: #>     ───────────────────────────────── #>     name       `inferred type` label  #>     ───────────────────────────────── #>     1 id         number          [none] #>     2 camera     string          [none] #>     3 sol        number          [none] #>     4 earth_date date            [none] #>     5 class      string          [none] #>     6 width      number          [none] #>     7 height     number          [none] #>     8 filesize   number          [none] #>     # ℹ 2 more rows view_trelliscope(d) #> ℹ Display has not been written... writing... #> ℹ Inferred that variable 'filesize' should be shown on log scale. #> ℹ Meta definitions inferred for variables \"id\", \"camera\", \"sol\", \"earth_date\", #>   \"class\", \"width\", \"height\", \"filesize\", \"hex\", and \"hue\" #> ℹ No default \"layout\" state supplied. Using ncol=3. #> ℹ No default \"labels\" state supplied. Using id. #> ℹ Trelliscope written to #>   /home/runner/work/trelliscope/trelliscope/docs/articles/trelliscope_files/figure-html//mars0/index.html #>   Open this file or call view_trelliscope() to view."},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"r-generated-visualizations","dir":"Articles","previous_headings":"Data frames of visualizations","what":"R-generated visualizations","title":"Introduction to Trelliscope","text":"likely common use case visualizing data analysis images yet exist creating subsets data analyzing. Trelliscope utilities make convenient packages like ggplot2. simple example, let’s consider gapminder dataset originally comes gapminder package. convenience, included modified version dataset Trelliscope package. data provides statistics life expectancy annually 123 countries. Suppose want visualize life expectancy vs. year country. ggplot2, something like : many panels view one page, making good candidate Trelliscope. Trelliscope provides function facet_panels() first step turning ggplot object Trelliscope data frame. can swap facet_wrap() function. can see, facet_panels() simply modifies ggplot object. print resulting object p, Trelliscope display written displayed. take turn data frame visualizations one row country/continent, can apply function nest_panels(). , just Mars rover example, data frame visualizations. However, case, visualizations ggplot objects instead image references. Note nest_panels() options as_plotly = TRUE convert ggplot objects plotly objects. can view plot one row calling panel column index number row want look . example, wanted see generated plot second row, Albania, run following code.  Note nested data frame visualizations can useful object work outside using Trelliscope. Just Mars rover example, can view data frame visualizations cast Trelliscope data frame as_trelliscoe_df() view view_trelliscope(). remainder tutorial cover customizations can apply Trelliscope data frames provide powerful interactions viewing app. Note several benefits using facet_panels() nest_panels(). First, fits naturally ggplot2 paradigm, can build Trelliscope visualization exactly building ggplot2 visualization. Second, can make use scales argument facet_panels() (behaves similarly argument facet_wrap()) ensure x y axis ranges plots behave way want. default plots \"fixed\" axis ranges. important consideration visualizing small multiples making visual comparisons often want comparing things scale.","code":"gapminder #> # A tibble: 1,476 × 9 #>    country   continent  year lifeExp    pop gdpPercap capital latitude longitude #>    <chr>     <fct>     <int>   <dbl>  <int>     <dbl> <chr>      <dbl>     <dbl> #>  1 Afghanis… Asia       1952    28.8 8.43e6      779. Kabul       34.5      69.2 #>  2 Afghanis… Asia       1957    30.3 9.24e6      821. Kabul       34.5      69.2 #>  3 Afghanis… Asia       1962    32.0 1.03e7      853. Kabul       34.5      69.2 #>  4 Afghanis… Asia       1967    34.0 1.15e7      836. Kabul       34.5      69.2 #>  5 Afghanis… Asia       1972    36.1 1.31e7      740. Kabul       34.5      69.2 #>  6 Afghanis… Asia       1977    38.4 1.49e7      786. Kabul       34.5      69.2 #>  7 Afghanis… Asia       1982    39.9 1.29e7      978. Kabul       34.5      69.2 #>  8 Afghanis… Asia       1987    40.8 1.39e7      852. Kabul       34.5      69.2 #>  9 Afghanis… Asia       1992    41.7 1.63e7      649. Kabul       34.5      69.2 #> 10 Afghanis… Asia       1997    41.8 2.22e7      635. Kabul       34.5      69.2 #> # ℹ 1,466 more rows library(trelliscope) library(ggplot2)  ggplot(gapminder, aes(year, lifeExp)) +   geom_point() +   facet_wrap(vars(country, continent)) p <- ggplot(gapminder, aes(year, lifeExp)) +   geom_point() +   facet_panels(vars(country, continent))  class(p) #> [1] \"facet_panels\" \"gg\"           \"ggplot\" p_nested <- nest_panels(p)  p_nested #> # A tibble: 123 × 4 #>    country     continent data              panel      #>    <chr>       <fct>     <list>            <nstd_pnl> #>  1 Afghanistan Asia      <tibble [12 × 8]> <gg>       #>  2 Albania     Europe    <tibble [12 × 8]> <gg>       #>  3 Algeria     Africa    <tibble [12 × 8]> <gg>       #>  4 Angola      Africa    <tibble [12 × 8]> <gg>       #>  5 Argentina   Americas  <tibble [12 × 8]> <gg>       #>  6 Australia   Oceania   <tibble [12 × 8]> <gg>       #>  7 Austria     Europe    <tibble [12 × 8]> <gg>       #>  8 Bahrain     Asia      <tibble [12 × 8]> <gg>       #>  9 Bangladesh  Asia      <tibble [12 × 8]> <gg>       #> 10 Belgium     Europe    <tibble [12 × 8]> <gg>       #> # ℹ 113 more rows p_nested$panel[[2]] trell_df <- as_trelliscope_df(p_nested,   name = \"gapminder life expectancy\")  view_trelliscope(trell_df) #> ℹ Display has not been written... writing... #> Writing panels ■■■                                8% | ETA: 12s #>  #> Writing panels ■■■■■■■■■■                        29% | ETA: 10s #>  #> Writing panels ■■■■■■■■■■■■■■■■                  50% | ETA:  7s #>  #> Writing panels ■■■■■■■■■■■■■■■■■■■■■■            71% | ETA:  4s #>  #> Writing panels ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■     93% | ETA:  1s #>  #> Writing panels ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% | ETA:  0s #>  #> ℹ Meta definitions inferred for variables \"country\" and \"continent\" #> ℹ No default \"layout\" state supplied. Using ncol=3. #> ℹ No default \"labels\" state supplied. Using country, continent. #> ℹ Trelliscope written to #>   /home/runner/work/trelliscope/trelliscope/docs/articles/trelliscope_files/figure-html//gap0/index.html #>   Open this file or call view_trelliscope() to view."},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"customizing-your-trelliscope-app","dir":"Articles","previous_headings":"","what":"Customizing your Trelliscope app","title":"Introduction to Trelliscope","text":"far seen ways get Trelliscope data frame can use create Trelliscope interactive visualization app. ’ve seen, can simply pass Trelliscope data frame view_trelliscope() get immediate output. However, many operations can perform Trelliscope data frame customize app behaves.","code":""},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"pipe-functions","dir":"Articles","previous_headings":"Customizing your Trelliscope app","what":"Pipe functions","title":"Introduction to Trelliscope","text":"Trelliscope data frame simply data frame attributes Trelliscope display can modify pipe functions (functions take Trelliscope data frame primary argument return modified Trelliscope data frame). following pipe functions available modifying Trelliscope data frame. set_default_filters() set_default_labels() set_default_layout() set_default_sort() add_meta_defs() add_meta_labels() add_meta_tags() add_inputs() add_view() add_charm() write_panels() write_trelliscope() view_trelliscope() Trelliscope data frame can refined piping functions. First focus “writing viewing” functions.","code":""},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"writing-panels-and-viewing-the-display","dir":"Articles","previous_headings":"Customizing your Trelliscope app","what":"Writing panels and viewing the display","title":"Introduction to Trelliscope","text":"Let’s revisit gapminder example. put together individual pieces described earlier get raw gapminder data Trelliscope data frame one code block. Trelliscope viewer app displays pre-rendered panels, must written can view display. can done write_panels() function. function provides arguments allow specify want panels written (e.g. image format, aspect ratio, etc.). can specify want gapminder panels render svg files 2:1 aspect ratio (specifed e.g. width = 600 height = 300). Note need explicity call write_panels() happy defaults (500x500px png). Trelliscope notices panels written panel contents updated since last time written, write panels automatically defaults. force writing panels can add force = TRUE write_panels().","code":"trell_df <- (   ggplot(gapminder, aes(year, lifeExp)) +     geom_point() +     facet_panels(vars(country, continent))   ) |>   nest_panels() |>   as_trelliscope_df(name = \"gapminder life expectancy\", path = \"lifeexp\") trell_df <- write_panels(trell_df, format = \"svg\", width = 600, height = 300) #> Writing panels ■■■■                              11% | ETA:  8s #> Writing panels ■■■■■■■■■■■■■                     41% | ETA:  6s #> Writing panels ■■■■■■■■■■■■■■■■■■■■■             68% | ETA:  3s #> Writing panels ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■    95% | ETA:  1s #> Writing panels ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% | ETA:  0s"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"adding-metadata-to-a-trelliscope-data-frame","dir":"Articles","previous_headings":"Customizing your Trelliscope app","what":"Adding metadata to a Trelliscope data frame","title":"Introduction to Trelliscope","text":"getting pipe functions, address one Trelliscope’s useful features; ability sort filter visualizations associated metadata. pipe functions help specify metadata presented app. Metadata can value related panel display. case gapminder example, computed metrics mean life expectancy, attribute country country’s capital city even link government webpage. column atomic values Trelliscope data frame automatically considered metadata. Therefore, add new metadata variables data, can simply join create additional columns data frame. add example earlier joining metadata nested data frame earlier can use sorting filtering Trelliscope viewing app. Let’s remind already data frame. , metadata variables country continent (data scalar). Suppose want add variables summary statistics life expectancy GDP. One way operate data column trell_df, computing summaries nested data frame. natural way create separate data frame summaries computed directly gapminder dataset join Trelliscope data frame. , use dplyr compute summaries. experience Tidyverse packages dplyr tidyr, examples straightforward. , great resource can found “R Data Science”, particularly chapter mimics many ideas nesting list columns data set. course, can use approach computing summaries well. Since row trell_df corresponds single country/continent, need summaries computed country/continent. create data frame metadata summary statistics construct Wikipedia link country. metadata frame created can now join original nested data frame panels stored create complete data frame. view display view_trelliscope(), see new variables available sorting filtering. different metadata variable types discuss . explicitly specified, Trelliscope try infer . example, may notice Trelliscope app wiki_link metadata variable auto-detected URL available shown panel label.","code":"trell_df #> ℹ Trelliscope data frame. Call show_info() for more information #> # A tibble: 123 × 5 #>    country     continent data              panel      `__PANEL_KEY__`    #>    <chr>       <fct>     <list>            <nstd_pnl> <chr>              #>  1 Afghanistan Asia      <tibble [12 × 8]> <gg>       Afghanistan_Asia   #>  2 Albania     Europe    <tibble [12 × 8]> <gg>       Albania_Europe     #>  3 Algeria     Africa    <tibble [12 × 8]> <gg>       Algeria_Africa     #>  4 Angola      Africa    <tibble [12 × 8]> <gg>       Angola_Africa      #>  5 Argentina   Americas  <tibble [12 × 8]> <gg>       Argentina_Americas #>  6 Australia   Oceania   <tibble [12 × 8]> <gg>       Australia_Oceania  #>  7 Austria     Europe    <tibble [12 × 8]> <gg>       Austria_Europe     #>  8 Bahrain     Asia      <tibble [12 × 8]> <gg>       Bahrain_Asia       #>  9 Bangladesh  Asia      <tibble [12 × 8]> <gg>       Bangladesh_Asia    #> 10 Belgium     Europe    <tibble [12 × 8]> <gg>       Belgium_Europe     #> # ℹ 113 more rows library(dplyr)  meta_df <- gapminder |>   group_by(country, continent) |>   summarise(     mean_lifeExp = mean(lifeExp),     min_lifeExp = min(lifeExp),     mean_gdp = mean(gdpPercap),     .groups = \"drop\"   ) |>   mutate(     wiki_link = paste0(\"https://en.wikipedia.org/wiki/\", country)   )  meta_df #> # A tibble: 123 × 6 #>    country     continent mean_lifeExp min_lifeExp mean_gdp wiki_link             #>    <chr>       <fct>            <dbl>       <dbl>    <dbl> <chr>                 #>  1 Afghanistan Asia              37.5        28.8     803. https://en.wikipedia… #>  2 Albania     Europe            68.4        55.2    3255. https://en.wikipedia… #>  3 Algeria     Africa            59.0        43.1    4426. https://en.wikipedia… #>  4 Angola      Africa            37.9        30.0    3607. https://en.wikipedia… #>  5 Argentina   Americas          69.1        62.5    8956. https://en.wikipedia… #>  6 Australia   Oceania           74.7        69.1   19981. https://en.wikipedia… #>  7 Austria     Europe            73.1        66.8   20412. https://en.wikipedia… #>  8 Bahrain     Asia              65.6        50.9   18078. https://en.wikipedia… #>  9 Bangladesh  Asia              49.8        37.5     818. https://en.wikipedia… #> 10 Belgium     Europe            73.6        68     19901. https://en.wikipedia… #> # ℹ 113 more rows trell_df <- left_join(trell_df, meta_df, by = c(\"country\", \"continent\"))  trell_df #> ℹ Trelliscope data frame. Call show_info() for more information #> # A tibble: 123 × 9 #>    country     continent data     panel `__PANEL_KEY__` mean_lifeExp min_lifeExp #>    <chr>       <fct>     <list>   <nst> <chr>                  <dbl>       <dbl> #>  1 Afghanistan Asia      <tibble> <gg>  Afghanistan_As…         37.5        28.8 #>  2 Albania     Europe    <tibble> <gg>  Albania_Europe          68.4        55.2 #>  3 Algeria     Africa    <tibble> <gg>  Algeria_Africa          59.0        43.1 #>  4 Angola      Africa    <tibble> <gg>  Angola_Africa           37.9        30.0 #>  5 Argentina   Americas  <tibble> <gg>  Argentina_Amer…         69.1        62.5 #>  6 Australia   Oceania   <tibble> <gg>  Australia_Ocea…         74.7        69.1 #>  7 Austria     Europe    <tibble> <gg>  Austria_Europe          73.1        66.8 #>  8 Bahrain     Asia      <tibble> <gg>  Bahrain_Asia            65.6        50.9 #>  9 Bangladesh  Asia      <tibble> <gg>  Bangladesh_Asia         49.8        37.5 #> 10 Belgium     Europe    <tibble> <gg>  Belgium_Europe          73.6        68   #> # ℹ 113 more rows #> # ℹ 2 more variables: mean_gdp <dbl>, wiki_link <chr>"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"defining-metadata-variables","dir":"Articles","previous_headings":"Customizing your Trelliscope app","what":"Defining metadata variables","title":"Introduction to Trelliscope","text":"metadata variable can additional attributes specified enhance user’s experience viewing display. main attribute metadata variable label. Without supplying label, variables appear viewer variable names (e.g. “mean_gdp” vs. label might prefer provide clarity user, “Mean yearly GDP per capita (US$, inflation-adjusted)”). Additionally, can specify variable type, specify tags (e.g. “demographics”, “geography”, etc.) can make variables easier navigate viewer many , type-specific parameters. metadata variable can specified using helper function specifies type. arguments varname, label, tags (denoted ...) additional arguments either self-explanatory can studied looking function help files. meta_string(...): indicates variable string meta_factor(..., levels): indicates variable factor - difference string provided levels used determine sorting order, etc. opposed alphabetically strings meta_number(..., digits, locale): indicates numeric variable meta_currency(..., code): indicates currency variable - essentially number displayed differently app meta_date(...): indicates date variable meta_datetime(...): indicates datetime variable meta_href(...): indicates variable contains hyperlink another web source - rendered hyperlink meta_geo(..., latvar, longvar): indicates geographic coordinates (currently supported) meta_graph(..., idvarname, direction): indicates network graph relationships variables (currently supported) can provide metadata variable specifications calling add_meta_defs() trelliscope data frame. function takes arguments number meta_*() function calls. example, let’s build object include metadata variable specifications: metadata variable definitions provided (don’t provide explicit definitions country, continent, min_lifeExp, mean_lifeExp), inferred time display written. inference usually works pretty well infer labels able detect things like currencies.","code":"trell_df <- trell_df |>   add_meta_defs(     meta_number(\"mean_gdp\",       label = \"Mean of annual GDP per capita (US$, inflation-adjusted)\",       digits = 2),     meta_href(\"wiki_link\", label = \"Wikipedia country page\")   ) #> ℹ Inferred that variable 'mean_gdp' should be shown on log #> scale.  show_info(trell_df) #> A trelliscope display #> • Name: \"gapminder life expectancy\" #> • Description: \"gapminder life expectancy\" #> • Tags: none #> • Key columns: \"country\" and \"continent\" #> • Path: #>   \"/home/runner/work/trelliscope/trelliscope/docs/articles/trelliscope_files/figure-html//gap1\" #> • Number of panels: 123 #> • Panels written: yes #> • Defined metadata variables: #>     ───────────────────────────────────────────────── #>     name      type   label                      tags  #>     ───────────────────────────────────────────────── #>     1 mean_gdp  number Mean of annual GDP per ca… []    #>     2 wiki_link href   Wikipedia country page     []    #>     ───────────────────────────────────────────────── #> • Metadata variables that will be inferred: #>     ─────────────────────────────────── #>     name         `inferred type` label  #>     ─────────────────────────────────── #>     1 country      string          [none] #>     2 continent    factor          [none] #>     3 mean_lifeExp number          [none] #>     4 min_lifeExp  number          [none] #>     ─────────────────────────────────── #> • Variables that will be ignored as metadata: \"data\" and \"panel\""},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"add_meta_labels","dir":"Articles","previous_headings":"Customizing your Trelliscope app > Defining metadata variables","what":"add_meta_labels()","title":"Introduction to Trelliscope","text":"Often metadata inference works well enough might just want provide labels metadata variables skip formal metadata variable definition. can add_meta_labels(). function simply takes named set parameters input, names indicating variable name values indicating labels. example: still haven’t specified labels country continent. labels provided, set variable name. case two variables, variable name clear enough need specify labels.","code":"trell_df <- trell_df |>   add_meta_labels(     mean_lifeExp = \"Mean of annual life expectancies\",     min_lifeExp = \"Lowest observed annual life expectancy\"   )  show_info(trell_df) #> A trelliscope display #> • Name: \"gapminder life expectancy\" #> • Description: \"gapminder life expectancy\" #> • Tags: none #> • Key columns: \"country\" and \"continent\" #> • Path: #>   \"/home/runner/work/trelliscope/trelliscope/docs/articles/trelliscope_files/figure-html//gap1\" #> • Number of panels: 123 #> • Panels written: yes #> • Defined metadata variables: #>     ───────────────────────────────────────────────── #>     name      type   label                      tags  #>     ───────────────────────────────────────────────── #>     1 mean_gdp  number Mean of annual GDP per ca… []    #>     2 wiki_link href   Wikipedia country page     []    #>     ───────────────────────────────────────────────── #> • Metadata variables that will be inferred: #>     ─────────────────────────────────────────────────────────────────── #>     name         `inferred type` label                                  #>     ─────────────────────────────────────────────────────────────────── #>     1 country      string          [none]                                 #>     2 continent    factor          [none]                                 #>     3 mean_lifeExp number          Mean of annual life expectancies       #>     4 min_lifeExp  number          Lowest observed annual life expectancy #>     ─────────────────────────────────────────────────────────────────── #> • Variables that will be ignored as metadata: \"data\" and \"panel\""},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"setting-the-default-state-of-the-app","dir":"Articles","previous_headings":"Customizing your Trelliscope app","what":"Setting the default state of the app","title":"Introduction to Trelliscope","text":"Trelliscope apps default display panels order appear data frame. Often makes sense start user specific point app, pre-defining sorting filtering state, defining panel labels want user see initially.","code":""},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"set_default_labels","dir":"Articles","previous_headings":"Customizing your Trelliscope app > Setting the default state of the app","what":"set_default_labels()","title":"Introduction to Trelliscope","text":"default, “key columns” shown labels. ’d like change labels shown display opened, can use set_default_labels(), e.g.:","code":"trell_df <- trell_df |>   set_default_labels(c(\"country\", \"continent\", \"wiki_link\"))"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"set_default_layout","dir":"Articles","previous_headings":"Customizing your Trelliscope app > Setting the default state of the app","what":"set_default_layout()","title":"Introduction to Trelliscope","text":"can also set default panel layout, example wish see 5 columns panels initial view app (number rows computed based size user’s browser window aspect ratio panels).","code":"trell_df <- trell_df |>   set_default_layout(ncol = 4)"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"set_default_sort","dir":"Articles","previous_headings":"Customizing your Trelliscope app > Setting the default state of the app","what":"set_default_sort()","title":"Introduction to Trelliscope","text":"can set default sort order set_default_sort(). , provide vector variable names vector “asc” “desc” values inidicatingm ascending descending sort order.","code":"trell_df <- trell_df |>   set_default_sort(c(\"continent\", \"mean_lifeExp\"), dir = c(\"asc\", \"desc\"))"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"set_default_filters","dir":"Articles","previous_headings":"Customizing your Trelliscope app > Setting the default state of the app","what":"set_default_filters()","title":"Introduction to Trelliscope","text":"can set default filter state set_default_filters(). Currently two different kinds filters: filter_range(varname, min = ..., max = ...): works numeric, date, datetime variables filter_string(varname, values = ...): works factor string variables types filters planned.","code":"trell_df <- trell_df |>   set_default_filters(     filter_string(\"continent\", values = \"Africa\"),     filter_range(\"mean_lifeExp\", max = 50)   )"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"defining-views","dir":"Articles","previous_headings":"Customizing your Trelliscope app","what":"Defining “views”","title":"Introduction to Trelliscope","text":"Views predefined sets state made available viewer help user conveniently get regions display interesting different ways. can add view chaining display add_view() function. add_view() takes name first argument, number state specifications. functions available set state following: state_layout() state_labels() state_sort() filter_string() filter_range() state_*() functions parameters behave similarly set_*() counterparts except unlike , receive Trelliscope data frame return Trelliscope data frame, instead just specify state. filter_*() functions seen already. example, suppose wish add view shows countries minimum life expectancy greater equal 60, sorted highest lowest minimum life expectancy: can add many views like chaining calls add_view().","code":"trell_df <- trell_df |>   add_view(     name = \"Countries with high life expectancy (min >= 60)\",     filter_range(\"min_lifeExp\", min = 60),     state_sort(\"min_lifeExp\", dir = \"desc\")   )"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"specifying-user-inputs","dir":"Articles","previous_headings":"Customizing your Trelliscope app","what":"Specifying user inputs","title":"Introduction to Trelliscope","text":"can add user inputs attached panel display using add_inputs() function. function takes number arguments created following functions: input_radio(name, label, options) input_text(name, label, width, height) following additional input types exist yet supported app. input_checkbox(name, label, options) input_select(name, label, options) input_multiselect(name, label, options) input_number(name, label) specify different input types. example, want free text input comments well yes/question asking data looks correct panel, can following. final argument, email, currently required provide user way send inputs back . Since Trelliscope app backed server, persistent storage user inputs currently supported, need capture inputs user directly. Let’s see operations reflected Trelliscope data frame:","code":"trell_df <- trell_df |>   add_inputs(     input_text(name = \"comments\", label = \"Comments about this panel\",       height = 6),     input_radio(name = \"looks_correct\",       label = \"Does the data look correct?\", options = c(\"no\", \"yes\")),     email = \"johndoe123@fakemail.net\"   ) show_info(trell_df) #> A trelliscope display #> • Name: \"gapminder life expectancy\" #> • Description: \"gapminder life expectancy\" #> • Tags: none #> • Key columns: \"country\" and \"continent\" #> • Path: #>   \"/home/runner/work/trelliscope/trelliscope/docs/articles/trelliscope_files/figure-html//gap1\" #> • Number of panels: 123 #> • Panels written: yes #> • Defined metadata variables: #>     ───────────────────────────────────────────────── #>     name      type   label                      tags  #>     ───────────────────────────────────────────────── #>     1 mean_gdp  number Mean of annual GDP per ca… []    #>     2 wiki_link href   Wikipedia country page     []    #>     ───────────────────────────────────────────────── #> • Metadata variables that will be inferred: #>     ─────────────────────────────────────────────────────────────────── #>     name         `inferred type` label                                  #>     ─────────────────────────────────────────────────────────────────── #>     1 country      string          [none]                                 #>     2 continent    factor          [none]                                 #>     3 mean_lifeExp number          Mean of annual life expectancies       #>     4 min_lifeExp  number          Lowest observed annual life expectancy #>     ─────────────────────────────────────────────────────────────────── #> • Variables that will be ignored as metadata: \"data\" and \"panel\""},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"output","dir":"Articles","previous_headings":"Customizing your Trelliscope app > Specifying user inputs","what":"Output","title":"Introduction to Trelliscope","text":"Now built Trelliscope data frame, can write specified write_trelliscope(). writes panels haven’t written yet writes JSON representation specifications made app consume. final output.","code":"trell_df <- write_trelliscope(trell_df) #> ℹ Meta definitions inferred for variables \"country\", \"continent\", #>   \"mean_lifeExp\", and \"min_lifeExp\" #> ℹ No default \"layout\" state supplied for view 'Countries with high life #>   expectancy (min >= 60)'. Using ncol=3. #> ℹ No default \"labels\" state supplied for view 'Countries with high life #>   expectancy (min >= 60)'. Using country, continent. #> ℹ Trelliscope written to #>   /home/runner/work/trelliscope/trelliscope/docs/articles/trelliscope_files/figure-html//gap1/index.html #>   Open this file or call view_trelliscope() to view. view_trelliscope(trell_df)"},{"path":"https://trelliscope.github.io/trelliscope/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ryan Hafen. Author, maintainer.","code":""},{"path":"https://trelliscope.github.io/trelliscope/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hafen R (2023). trelliscope: Create Interactive Trelliscope Displays. https://trelliscope.org/trelliscope, https://github.com/trelliscope/trelliscope.","code":"@Manual{,   title = {trelliscope: Create Interactive Trelliscope Displays},   author = {Ryan Hafen},   year = {2023},   note = {https://trelliscope.org/trelliscope, https://github.com/trelliscope/trelliscope}, }"},{"path":"https://trelliscope.github.io/trelliscope/index.html","id":"trelliscope-","dir":"","previous_headings":"","what":"Interactively Explore Data Frames of Visualizations","title":"Interactively Explore Data Frames of Visualizations","text":"Trelliscope R package enables interactive exploration data frames visualizations.","code":""},{"path":"https://trelliscope.github.io/trelliscope/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interactively Explore Data Frames of Visualizations","text":"","code":"remotes::install_github(\"trelliscope/trelliscope\")"},{"path":"https://trelliscope.github.io/trelliscope/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Interactively Explore Data Frames of Visualizations","text":"Trelliscope provides utilities create visualize data frames visualizations. visualizations can anything can produce R, can also simply links images already created. simple example, package comes example data frame links Mars Curiosity Rover images. row represents one image taken rover associated metadata. Casting data frame trelliscope data frame gives us ability build interactive display. additional configuration, can simply view images referenced img_src column interactively navigate using provided metadata following:  scratches surface functions found package. beginning tutorial, can dive deeper topics including: Creating viewing data frames visualizations created R (e.g. ggplot2, htmlwidgets) Fine control metadata Setting initial view app Providing set pre-determined views user Specifying user inputs can collected labeling capturing insights domain knowledge Embedding interactive visualizations common output formats Get started tutorial","code":"library(trelliscope)  mars_rover #> # A tibble: 1,245 × 5 #>    camera                  sol earth_date class   img_src #>    <chr>                 <int> <chr>      <chr>   <chr> #>  1 Mars Hand Lens Imager   565 2014-03-09 horizon http://mars.jpl.nasa.gov/m… #>  2 Mars Hand Lens Imager   565 2014-03-09 horizon http://mars.jpl.nasa.gov/m… #>  3 Mars Hand Lens Imager   568 2014-03-12 wheel   http://mars.jpl.nasa.gov/m… #>  4 Mars Hand Lens Imager   568 2014-03-12 wheel   http://mars.jpl.nasa.gov/m… #>  5 Mars Hand Lens Imager   568 2014-03-12 wheel   http://mars.jpl.nasa.gov/m… #> # … with 1,240 more rows d <- as_trelliscope_df(mars_rover, name = \"mars rover\") d #> ℹ Trelliscope data frame. Call show_info() for more information #> # A tibble: 1,245 × 5 #>    camera                  sol earth_date class   img_src #>    <chr>                 <int> <chr>      <chr>   <chr> #>  1 Mars Hand Lens Imager   565 2014-03-09 horizon http://mars.jpl.nasa.gov/m… #>  2 Mars Hand Lens Imager   565 2014-03-09 horizon http://mars.jpl.nasa.gov/m… #>  3 Mars Hand Lens Imager   568 2014-03-12 wheel   http://mars.jpl.nasa.gov/m… #>  4 Mars Hand Lens Imager   568 2014-03-12 wheel   http://mars.jpl.nasa.gov/m… #>  5 Mars Hand Lens Imager   568 2014-03-12 wheel   http://mars.jpl.nasa.gov/m… #> # … with 1,240 more rows view_trelliscope(d)"},{"path":"https://trelliscope.github.io/trelliscope/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Interactively Explore Data Frames of Visualizations","text":"Much development Trelliscope funded years support US government grants following: DARPA XDATA big data initiative DOE SBIR DE-FOA-0001940 DoD SBIR Many thanks agencies associated funding programs support sustaining open source project.","code":""},{"path":"https://trelliscope.github.io/trelliscope/index.html","id":"note","dir":"","previous_headings":"","what":"Note","title":"Interactively Explore Data Frames of Visualizations","text":"package reimagines supersedes trelliscopejs R package.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_charm.html","id":null,"dir":"Reference","previous_headings":"","what":"Use fidelius to password protect a trelliscope display — add_charm","title":"Use fidelius to password protect a trelliscope display — add_charm","text":"Use fidelius password protect trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_charm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use fidelius to password protect a trelliscope display — add_charm","text":"","code":"add_charm(trdf, ...)"},{"path":"https://trelliscope.github.io/trelliscope/reference/add_charm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use fidelius to password protect a trelliscope display — add_charm","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . ... Arguments passed charm() function fidelius package.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Add inputs to a trelliscope display — add_inputs","title":"Add inputs to a trelliscope display — add_inputs","text":"Add inputs trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add inputs to a trelliscope display — add_inputs","text":"","code":"add_inputs(trdf, ..., email, vars = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/add_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add inputs to a trelliscope display — add_inputs","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . ... number input specifications. can specified input_number(), input_radio(), input_checkbox(), input_select(), input_multiselect(), input_text() email email address. vars vector meta variable names found display. made available columns csv download user inputs.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_meta_def.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a meta variable definition to a trelliscope display — add_meta_def","title":"Add a meta variable definition to a trelliscope display — add_meta_def","text":"Add meta variable definition trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_meta_def.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a meta variable definition to a trelliscope display — add_meta_def","text":"","code":"add_meta_def(trdf, obj)"},{"path":"https://trelliscope.github.io/trelliscope/reference/add_meta_def.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a meta variable definition to a trelliscope display — add_meta_def","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . obj meta variable definition created meta_*() function.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_meta_defs.html","id":null,"dir":"Reference","previous_headings":"","what":"Add multiple meta variable definitions to a trelliscope display — add_meta_defs","title":"Add multiple meta variable definitions to a trelliscope display — add_meta_defs","text":"Add multiple meta variable definitions trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_meta_defs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add multiple meta variable definitions to a trelliscope display — add_meta_defs","text":"","code":"add_meta_defs(trdf, ...)"},{"path":"https://trelliscope.github.io/trelliscope/reference/add_meta_defs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add multiple meta variable definitions to a trelliscope display — add_meta_defs","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . ... number objects created meta_*() functions.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_meta_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify labels for meta variables — add_meta_labels","title":"Specify labels for meta variables — add_meta_labels","text":"Specify labels meta variables","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_meta_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify labels for meta variables — add_meta_labels","text":"","code":"add_meta_labels(trdf, ...)"},{"path":"https://trelliscope.github.io/trelliscope/reference/add_meta_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify labels for meta variables — add_meta_labels","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . ... named set labels, name must correspond one variables dataset","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_meta_labels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify labels for meta variables — add_meta_labels","text":"function can useful want go trouble explicitly setting meta variable definitions still want variable descriptions.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_meta_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify tags for meta variables — add_meta_tags","title":"Specify tags for meta variables — add_meta_tags","text":"Specify tags meta variables","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_meta_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify tags for meta variables — add_meta_tags","text":"","code":"add_meta_tags(trdf, ...)"},{"path":"https://trelliscope.github.io/trelliscope/reference/add_meta_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify tags for meta variables — add_meta_tags","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . ... named set vectors tags, name must correspond one variables dataset","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_meta_tags.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify tags for meta variables — add_meta_tags","text":"function can useful want go trouble explicitly setting meta variable definitions still want variable tags.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_trelliscope_resource_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Trelliscope resource path for Shiny app — add_trelliscope_resource_path","title":"Add Trelliscope resource path for Shiny app — add_trelliscope_resource_path","text":"Add Trelliscope resource path Shiny app","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_trelliscope_resource_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Trelliscope resource path for Shiny app — add_trelliscope_resource_path","text":"","code":"add_trelliscope_resource_path(prefix, path)"},{"path":"https://trelliscope.github.io/trelliscope/reference/add_trelliscope_resource_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Trelliscope resource path for Shiny app — add_trelliscope_resource_path","text":"prefix, path See shiny::addResourcePath()","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_view.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a view specification to a trelliscope display — add_view","title":"Add a view specification to a trelliscope display — add_view","text":"Add view specification trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_view.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a view specification to a trelliscope display — add_view","text":"","code":"add_view(trdf, name, ...)"},{"path":"https://trelliscope.github.io/trelliscope/reference/add_view.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a view specification to a trelliscope display — add_view","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . name name view. ... number state specifications define view. can specified state_layout(), state_labels(), state_sort(), filter_string(), filter_range().","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/as_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert any trelliscope R6 object to JSON — as_json","title":"Convert any trelliscope R6 object to JSON — as_json","text":"Convert trelliscope R6 object JSON","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/as_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert any trelliscope R6 object to JSON — as_json","text":"","code":"as_json(trdf, pretty = TRUE)"},{"path":"https://trelliscope.github.io/trelliscope/reference/as_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert any trelliscope R6 object to JSON — as_json","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . pretty Adds indentation whitespace JSON output. Can TRUE/FALSE number specifying number spaces indent.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/as_trelliscope_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Instantiate a trelliscope data frame — as_trelliscope_df","title":"Instantiate a trelliscope data frame — as_trelliscope_df","text":"Instantiate trelliscope data frame","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/as_trelliscope_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Instantiate a trelliscope data frame — as_trelliscope_df","text":"","code":"as_trelliscope_df(   df,   name = NULL,   description = name,   key_cols = NULL,   tags = NULL,   path = NULL,   force_plot = FALSE,   key_sig = NULL,   server = NULL )"},{"path":"https://trelliscope.github.io/trelliscope/reference/as_trelliscope_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Instantiate a trelliscope data frame — as_trelliscope_df","text":"df data frame contains metadata display well column indicate panels displayed. name Name trelliscope display. description Description trelliscope display. key_cols Variable names df uniquely define row data. supplied, attempt made infer . tags Optional vector tag names identify display case many search . path Directory place trelliscope display written using write_trelliscope(). force_plot panels forced plotted, even already plotted changed since previous plotting? key_sig string \"signature\" represents panels display. specified unless know . server experimental feature allows local R session act server panels need pre-rendered. See local_websocket_server().","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/as_trelliscope_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Instantiate a trelliscope data frame — as_trelliscope_df","text":"","code":"# Use `as_trelliscope_df()` to convert panel metadata to a special # trelliscope data frame if (FALSE) { library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gapminder, aes(year, lifeExp)) +     geom_point() +     facet_panels(~country + continent)   ) |>     nest_panels()  meta_dat <- gapminder |>   group_by(country, continent) |>   summarise(     mean_lifeExp = mean(lifeExp),     min_lifeExp = min(lifeExp),     max_lifeexp = max(lifeExp),     mean_gdp = mean(gdpPercap),     .groups = \"drop\"   )  joined_dat <- left_join(panel_dat, meta_dat) |>   as_trelliscope_df(name = \"life_expectancy\", path = tempfile())  disp <- joined_dat |>   write_panels() |>   write_trelliscope() |>   view_trelliscope() }  # You can also use `as_trelliscope_df()` on datasets that have links to # images instead of conventional ggplot objects if (FALSE) { }"},{"path":"https://trelliscope.github.io/trelliscope/reference/currencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Data frame of currencies and their codes — currencies","title":"Data frame of currencies and their codes — currencies","text":"Data frame currencies codes","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/currencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data frame of currencies and their codes — currencies","text":"","code":"currencies"},{"path":"https://trelliscope.github.io/trelliscope/reference/currencies.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data frame of currencies and their codes — currencies","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 278 rows 5 columns.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/currencies.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data frame of currencies and their codes — currencies","text":"https://www.six-group.com/en/products-services/financial-information/data-standards.html#scrollTo=maintenance-agency","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/facet_panels.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a trelliscope facet to a ggplot — facet_panels","title":"Add a trelliscope facet to a ggplot — facet_panels","text":"Add trelliscope facet ggplot","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/facet_panels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a trelliscope facet to a ggplot — facet_panels","text":"","code":"facet_panels(   facets,   scales = \"same\",   add_plot_metrics = FALSE,   unfacet = c(\"none\", \"line\", \"point\"),   unfacet_col = \"gray\",   unfacet_alpha = 0.4,   data = ggplot2::waiver() )"},{"path":"https://trelliscope.github.io/trelliscope/reference/facet_panels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a trelliscope facet to a ggplot — facet_panels","text":"facets formula facet panels . Similar ggplot2::facet_wrap()'s `facets`` scales scales (\"\", default), free (\"free\"), sliced (\"sliced\"). May provide single string two strings, one X Y axis respectively. add_plot_metrics metrics panel automatically calculated? metrics based context plotted, e.g. correlation coefficient plot scatterplot. unfacet Specifies whether \"unfacet\" data data appears background plot. Options \"none\" (default), \"line\" \"point\". latter two options add either line point layer, grouped faceting variables, underneath panel. useful time series plots viewing panel relation others. unfacet_col color use \"unfacet\" lines points. unfacet_alpha alpha use \"unfacet\" lines points. data data used faceting. Defaults main data argument ggplot2::ggplot().","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/facet_panels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a trelliscope facet to a ggplot — facet_panels","text":"","code":"# You can run facet_panels() just like how you would run facet_wrap() if (FALSE) { library(ggplot2)  ggplot(gapminder, aes(year, lifeExp)) +   geom_point() +   facet_panels(~country + continent) }  # facet_panels can also be a jumping off point into setting up a more  # developed trelliscope by passing into `nest_panels()` to create a nested # trelliscope data frame for additional editing. if (FALSE) { library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gapminder, aes(year, lifeExp)) +   geom_point() +   facet_panels(~country + continent) ) |>   nest_panels()  trell_df <- panel_dat |>   as_trelliscope_df(name = \"life expectancy\", path = \"gapminder\") |>   set_default_layout(nrow = 2, ncol = 4) |>   write_panels() |>   write_trelliscope()  view_trelliscope(trell_df) }"},{"path":"https://trelliscope.github.io/trelliscope/reference/filter_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a range ","title":"Specify a range ","text":"Specify range \"filter\" state (applies numeric, date, datetime meta variables)","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/filter_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a range ","text":"","code":"filter_range(varname, min = NULL, max = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/filter_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a range ","text":"varname name variable filter . min Lower bound range (NULL, lower bound). max Upper bound range (NULL, upper bound).","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/filter_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a string ","title":"Specify a string ","text":"Specify string \"filter\" state (applies string factor meta variables)","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/filter_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a string ","text":"","code":"filter_string(varname, regexp = NULL, values = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/filter_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a string ","text":"varname name variable filter . regexp search string can regular expression indicating values variable filter . values vector specific values variable filter . values specified, regexp ignored.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/gapminder.html","id":null,"dir":"Reference","previous_headings":"","what":"Gapminder data — gapminder","title":"Gapminder data — gapminder","text":"Gapminder data","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/gapminder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gapminder data — gapminder","text":"","code":"gapminder"},{"path":"https://trelliscope.github.io/trelliscope/reference/gapminder.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gapminder data — gapminder","text":"object class tbl_df (inherits tbl, data.frame) 1476 rows 9 columns.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/gapminder.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gapminder data — gapminder","text":"https://cran.r-project.org/web/packages/gapminder/index.html","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/iframe_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast a vector of URLs pointing to html pages as an image panel source — iframe_panel","title":"Cast a vector of URLs pointing to html pages as an image panel source — iframe_panel","text":"Cast vector URLs pointing html pages image panel source","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/iframe_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast a vector of URLs pointing to html pages as an image panel source — iframe_panel","text":"","code":"iframe_panel(x, aspect_ratio = 1.5)"},{"path":"https://trelliscope.github.io/trelliscope/reference/iframe_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast a vector of URLs pointing to html pages as an image panel source — iframe_panel","text":"x vector URLs pointing html pages. aspect_ratio Specifies aspect ratio (width / height) use displaying image browser.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/iframe_panel_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast a vector of URLs pointing to html pages as an image panel source — iframe_panel_local","title":"Cast a vector of URLs pointing to html pages as an image panel source — iframe_panel_local","text":"Cast vector URLs pointing html pages image panel source","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/iframe_panel_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast a vector of URLs pointing to html pages as an image panel source — iframe_panel_local","text":"","code":"iframe_panel_local(x, aspect_ratio = 1.5)"},{"path":"https://trelliscope.github.io/trelliscope/reference/iframe_panel_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast a vector of URLs pointing to html pages as an image panel source — iframe_panel_local","text":"x vector URLs pointing html pages. aspect_ratio Specifies aspect ratio (width / height) use displaying image browser.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/iframe_panel_local.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Cast a vector of URLs pointing to html pages as an image panel source — iframe_panel_local","text":"x must paths relative path argument passed as_trelliscope_df.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/img_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast a vector of URLs pointing to images as an image panel source — img_panel","title":"Cast a vector of URLs pointing to images as an image panel source — img_panel","text":"Cast vector URLs pointing images image panel source","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/img_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast a vector of URLs pointing to images as an image panel source — img_panel","text":"","code":"img_panel(x, aspect_ratio = 1.5)"},{"path":"https://trelliscope.github.io/trelliscope/reference/img_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast a vector of URLs pointing to images as an image panel source — img_panel","text":"x vector URLs pointing images. aspect_ratio Specifies aspect ratio (width / height) use displaying image browser.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/img_panel_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast a vector of URLs pointing to local images as an image panel source — img_panel_local","title":"Cast a vector of URLs pointing to local images as an image panel source — img_panel_local","text":"Cast vector URLs pointing local images image panel source","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/img_panel_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast a vector of URLs pointing to local images as an image panel source — img_panel_local","text":"","code":"img_panel_local(x, aspect_ratio = 1.5)"},{"path":"https://trelliscope.github.io/trelliscope/reference/img_panel_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast a vector of URLs pointing to local images as an image panel source — img_panel_local","text":"x vector URLs pointing images. aspect_ratio Specifies aspect ratio (width / height) use displaying image browser.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/img_panel_local.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Cast a vector of URLs pointing to local images as an image panel source — img_panel_local","text":"x must paths relative path argument passed as_trelliscope_df.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/infer_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer meta variable definitions — infer_meta","title":"Infer meta variable definitions — infer_meta","text":"Infer meta variable definitions","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/infer_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer meta variable definitions — infer_meta","text":"","code":"infer_meta(trdf)"},{"path":"https://trelliscope.github.io/trelliscope/reference/infer_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infer meta variable definitions — infer_meta","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast .","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/input_checkbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"checkbox\" input","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/input_checkbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"input_checkbox(name, label = name, active = TRUE, options)"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_checkbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"name Name input. label Description input. active input active default? options vector checkbox options.","code":""},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/input_checkbox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a ","text":"","code":"if (FALSE) { library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gapminder, aes(year, lifeExp)) +     geom_point() +     facet_panels(~ country + continent)   ) |>   nest_panels()  trell <- panel_dat |> as_trelliscope_df() |> write_panels() |> add_inputs(   input_checkbox(     name = \"Checkbox Input\",     label = \"A space to add custom button inputs\",     options = c(\"yes\", \"no\")   ) ) |> add_input_email(\"johndoe@email.com\") |> write_trelliscope() |> view_trelliscope() }"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_multiselect.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"multiselect\" input","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/input_multiselect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"input_multiselect(name, label = name, active = TRUE, options)"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_multiselect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"name Name input. label Description input. active input active default? options vector options multiselect dropdown.","code":""},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/input_multiselect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a ","text":"","code":"if (FALSE) { library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gapminder, aes(year, lifeExp)) +     geom_point() +     facet_panels(~ country + continent)   ) |>   nest_panels()  trell <- panel_dat |> as_trelliscope_df() |> write_panels() |> add_inputs(   input_multiselect(     name = \"Multiselect Input\",     label = \"A space to add custom dropdown inputs\",     options =c(\"yes\", \"no\")   ),   email = \"johndoe@email.com\" ) |> write_trelliscope() |> view_trelliscope() }"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"numeric\" input box","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/input_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"input_number(name, label = name, active = TRUE, min = NULL, max = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"name Name input. label Description input. active input active default? min Optional minimum value allow input. max Optional maximum value allow input.","code":""},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/input_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a ","text":"","code":"if (FALSE) { library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gapminder, aes(year, lifeExp)) +     geom_point() +     facet_panels(~ country + continent)   ) |>   nest_panels()  trell <- panel_dat |> as_trelliscope_df() |> write_panels() |> add_inputs(   input_number(     name = \"Numeric Input\",     label = \"A space to add custom ranking for sorting\",     min = 0, max = 10   ),   email = \"johndoe@email.com\" ) |> write_trelliscope() |> view_trelliscope() }"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_radio.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"radio button\" input","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/input_radio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"input_radio(name, label = name, active = TRUE, options)"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_radio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"name Name input. label Description input. active input active default? options vector radio button options.","code":""},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/input_radio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a ","text":"","code":"if (FALSE) { library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gapminder, aes(year, lifeExp)) +     geom_point() +     facet_panels(~ country + continent)   ) |>   nest_panels()  trell <- panel_dat |> as_trelliscope_df() |> write_panels() |> add_inputs(   input_radio(     name = \"Radio Input\",     label = \"A space to add custom ranking for sorting\",     options = c(\"yes\", \"no\")   ),   email = \"johndoe@email.com\" ) |> write_trelliscope() |> view_trelliscope() }"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"select\" input","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/input_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"input_select(name, label = name, active = TRUE, options)"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"name Name input. label Description input. active input active default? options vector options select dropdown.","code":""},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/input_select.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a ","text":"","code":"if (FALSE) { library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gapminder, aes(year, lifeExp)) +     geom_point() +     facet_panels(~ country + continent)   ) |>   nest_panels()  trell <- panel_dat |> as_trelliscope_df() |> write_panels() |> add_inputs(   input_select(     name = \"Select Input\",     label = \"A space to add custom dropdown inputs\",     options =c(\"yes\", \"no\")   ),   email = \"johndoe@email.com\" ) |> write_trelliscope() |> view_trelliscope() }"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"text box\" input","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/input_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"input_text(name, label = name, active = TRUE, height = 3)"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"name Name input. label Description input. active input active default? height Height (lines text) text box input.","code":""},{"path":[]},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/local_websocket_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up a local websocket server — local_websocket_server","title":"Set up a local websocket server — local_websocket_server","text":"Set local websocket server","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/local_websocket_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up a local websocket server — local_websocket_server","text":"","code":"local_websocket_server(   d,   plot_fn,   width = 500,   height = 500,   format = \"png\",   force = FALSE )"},{"path":"https://trelliscope.github.io/trelliscope/reference/local_websocket_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up a local websocket server — local_websocket_server","text":"d data frame subsets extracted plots made. superset summary dataset cast trelliscope data frame. plot_fn function produces panel given subset d width Width pixels panel. height Height pixels panel. format format panels server provide. Can one \"png\" , \"svg\", \"html\". force server force panels written? FALSE, panel already generated, made available.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/map2_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Map over multiple inputs simultaneously and return a vector of plots — map2_plot","title":"Map over multiple inputs simultaneously and return a vector of plots — map2_plot","text":"Map multiple inputs simultaneously return vector plots","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/map2_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map over multiple inputs simultaneously and return a vector of plots — map2_plot","text":"","code":"map2_plot(.x, .y, .f, ...)  pmap_plot(.l, .f, ...)"},{"path":"https://trelliscope.github.io/trelliscope/reference/map2_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map over multiple inputs simultaneously and return a vector of plots — map2_plot","text":".x, .y Vectors length. vector length 1 recycled. .f function, formula, atomic vector (see purrr::map2() details) ... additional arguments passed .f. .l list lists. length .l determines number arguments .f called . List names used present.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/map2_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map over multiple inputs simultaneously and return a vector of plots — map2_plot","text":"See purrr::map2()","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/map_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function to each element of a vector and return a vector of plots — map_plot","title":"Apply a function to each element of a vector and return a vector of plots — map_plot","text":"Apply function element vector return vector plots","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/map_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function to each element of a vector and return a vector of plots — map_plot","text":"","code":"map_plot(.x, .f, ...)"},{"path":"https://trelliscope.github.io/trelliscope/reference/map_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a function to each element of a vector and return a vector of plots — map_plot","text":".x list atomic vector (see purrr::map() details) .f function, formula, atomic vector (see purrr::map() details) ... additional arguments passed .f (see purrr::map() details)","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/map_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply a function to each element of a vector and return a vector of plots — map_plot","text":"See purrr::map()","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/mars_rover.html","id":null,"dir":"Reference","previous_headings":"","what":"Mars rover data — mars_rover","title":"Mars rover data — mars_rover","text":"Mars rover data","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/mars_rover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mars rover data — mars_rover","text":"","code":"mars_rover"},{"path":"https://trelliscope.github.io/trelliscope/reference/mars_rover.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mars rover data — mars_rover","text":"object class tbl_df (inherits tbl, data.frame) 1245 rows 11 columns.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/mars_rover.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mars rover data — mars_rover","text":"https://github.com/corincerami/mars-photo-api","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_currency.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"currency\" metadata variable","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_currency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"meta_currency(   varname,   label = NULL,   tags = NULL,   code = \"USD\",   digits = 2,   log = NULL )"},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_currency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"varname Name variable. label Description variable. tags Vector tag names help classify variable. code Currency code. See currencies list possibilities. digits many digits round displaying number. NULL, digits shown. Default 2. log variable's distribution shown log scale? specified, inference made based values.","code":""},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_currency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a ","text":"","code":"if (FALSE) { library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gapminder, aes(year, lifeExp)) +     geom_point() +     facet_panels(~country + continent)   ) |>   nest_panels()  meta_dat <- gapminder|>   group_by(country, continent) |>   summarise(     mean_lifeexp = mean(lifeExp),     min_lifeexp = min(lifeExp),     max_lifeexp = max(lifeExp),     mean_gdp = mean(gdpPercap),     first_year = min(year),     latitude = first(latitude),     longitude = first(longitude),     .groups = \"drop\"   ) |>   ungroup() |>   mutate(     first_date = as.Date(paste0(first_year, \"-01-01\")),     first_datetime = as.POSIXct.Date(first_date),     continent = as.factor(continent),     wiki_link = paste0(\"https://en.wikipedia.org/wiki/\", country)   )  joined_dat <- left_join(panel_dat, meta_dat,   by = join_by(country, continent))  trell <- joined_dat |>   as_trelliscope_df() |>   write_panels() |>   add_meta_defs(     meta_currency(       \"mean_gdp\",       label = \"Average GDP per capita\",       tags = \"GDP\"     )   ) }"},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"date\" metadata variable","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"meta_date(varname, label = NULL, tags = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"varname Name variable. label Description variable. tags Vector tag names help classify variable.","code":""},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a ","text":"","code":"if (FALSE) { library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gapminder, aes(year, lifeExp)) +     geom_point() +     facet_panels(~country + continent)   ) |>   nest_panels()  meta_dat <- gapminder|>   group_by(country, continent) |>   summarise(     mean_lifeexp = mean(lifeExp),     min_lifeexp = min(lifeExp),     max_lifeexp = max(lifeExp),     mean_gdp = mean(gdpPercap),     first_year = min(year),     latitude = first(latitude),     longitude = first(longitude),     .groups = \"drop\"   ) |>   ungroup() |>   mutate(     first_date = as.Date(paste0(first_year, \"-01-01\")),     first_datetime = as.POSIXct.Date(first_date),     continent = as.factor(continent),     wiki_link = paste0(\"https://en.wikipedia.org/wiki/\", country)   )  joined_dat <- left_join(panel_dat, meta_dat,   by = join_by(country, continent))  trell <- joined_dat |>   as_trelliscope_df() |>   write_panels() |>   add_meta_defs(     meta_date(       \"first_date\",       label = \"January 1st of the first year data was recorded\",       tags = \"Time\"     )   ) }"},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"datetime\" metadata variable","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"meta_datetime(varname, label = NULL, tags = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"varname Name variable. label Description variable. tags Vector tag names help classify variable.","code":""},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_datetime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a ","text":"","code":"if (FALSE) { library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gapminder, aes(year, lifeExp)) +     geom_point() +     facet_panels(~country + continent)   ) |>   nest_panels()  meta_dat <- gapminder|>   group_by(country, continent) |>   summarise(     mean_lifeexp = mean(lifeExp),     min_lifeexp = min(lifeExp),     max_lifeexp = max(lifeExp),     mean_gdp = mean(gdpPercap),     first_year = min(year),     latitude = first(latitude),     longitude = first(longitude),     .groups = \"drop\"   ) |>   ungroup() |>   mutate(     first_date = as.Date(paste0(first_year, \"-01-01\")),     first_datetime = as.POSIXct.Date(first_date),     continent = as.factor(continent),     wiki_link = paste0(\"https://en.wikipedia.org/wiki/\", country)   )  joined_dat <- left_join(panel_dat, meta_dat,   by = join_by(country, continent))  trell <- joined_dat |>   as_trelliscope_df() |>   write_panels() |>   add_meta_defs(     meta_datetime(       \"first_datetime\",       label = \"January 1st at 017:00 of the first year\",       tags = \"Time\"     )   ) }"},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"factor\" metadata variable","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"meta_factor(varname, label = NULL, tags = NULL, levels = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"varname Name variable. label Description variable. tags Vector tag names help classify variable. levels vector factor levels correspond variable. order levels respected sorted, etc. NULL, levels inferred data based order appear.","code":""},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a ","text":"","code":"if (FALSE) { library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gapminder, aes(year, lifeExp)) +     geom_point() +     facet_panels(~country + continent)   ) |>   nest_panels()  meta_dat <- gapminder|>   group_by(country, continent) |>   summarise(     mean_lifeexp = mean(lifeExp),     min_lifeexp = min(lifeExp),     max_lifeexp = max(lifeExp),     mean_gdp = mean(gdpPercap),     first_year = min(year),     latitude = first(latitude),     longitude = first(longitude),     .groups = \"drop\"   ) |>   ungroup() |>   mutate(     first_date = as.Date(paste0(first_year, \"-01-01\")),     first_datetime = as.POSIXct.Date(first_date),     continent = as.factor(continent),     wiki_link = paste0(\"https://en.wikipedia.org/wiki/\", country)   )  joined_dat <- left_join(panel_dat, meta_dat,   by = join_by(country, continent))  trell <- joined_dat |>   as_trelliscope_df() |>   write_panels() |>   add_meta_defs(     meta_factor(       \"continent\",       label = \"Continent the country belongs in\",       tags = \"Location\"     )   ) }"},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_geo.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"geo\" metadata variable","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_geo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"meta_geo(varname, label = NULL, tags = NULL, latvar, longvar)"},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_geo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"varname Name new variable act geographical coordinates (exist dataset). label Description variable. tags Vector tag names help classify variable. latvar Name variable contains latitude. longvar Name variable contains longitude.","code":""},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_geo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a ","text":"","code":"if (FALSE) { library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gapminder, aes(year, lifeExp)) +     geom_point() +     facet_panels(~country + continent)   ) |>   nest_panels()  meta_dat <- gapminder|>   group_by(country, continent) |>   summarise(     mean_lifeexp = mean(lifeExp),     min_lifeexp = min(lifeExp),     max_lifeexp = max(lifeExp),     mean_gdp = mean(gdpPercap),     first_year = min(year),     latitude = first(latitude),     longitude = first(longitude),     .groups = \"drop\"   ) |>   ungroup() |>   mutate(     first_date = as.Date(paste0(first_year, \"-01-01\")),     first_datetime = as.POSIXct.Date(first_date),     continent = as.factor(continent),     wiki_link = paste0(\"https://en.wikipedia.org/wiki/\", country)   )  joined_dat <- left_join(panel_dat, meta_dat,   by = join_by(country, continent))  trell <- joined_dat |>   as_trelliscope_df() |>   write_panels() |>   add_meta_defs(     meta_geo(       \"coordinates\",       label = \"Lat and Long of the country's capital\",        tags = \"Location\",       latvar = \"latitude\",       longvar = \"longitude\"     )   ) }"},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"graph\" metadata variable","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"meta_graph(   varname,   label = NULL,   tags = NULL,   idvarname,   linkidvarname,   labelvarname = idvarname,   direction = c(\"none\", \"to\", \"from\") )"},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"varname Name new variable act graph (exist dataset). label Description variable. tags Vector tag names help classify variable. idvarname Name variable data identifies node entity belongs . linkidvarname Name variable data contains identifier node entity links labelvarname Name variable data used label nodes graph. direction Direction links specifed varname. One \"none\", \"\", \"\". Determines whether arrows shown network graph app.","code":""},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_href.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"href\" metadata variable","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_href.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"meta_href(varname, label = NULL, tags = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_href.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"varname Name variable. label Description variable. tags Vector tag names help classify variable.","code":""},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_href.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a ","text":"","code":"if (FALSE) { library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gapminder, aes(year, lifeExp)) +     geom_point() +     facet_panels(~country + continent)   ) |>   nest_panels()  meta_dat <- gapminder|>   group_by(country, continent) |>   summarise(     mean_lifeexp = mean(lifeExp),     min_lifeexp = min(lifeExp),     max_lifeexp = max(lifeExp),     mean_gdp = mean(gdpPercap),     first_year = min(year),     latitude = first(latitude),     longitude = first(longitude),     .groups = \"drop\"   ) |>   ungroup() |>   mutate(     first_date = as.Date(paste0(first_year, \"-01-01\")),     first_datetime = as.POSIXct.Date(first_date),     continent = as.factor(continent),     wiki_link = paste0(\"https://en.wikipedia.org/wiki/\", country)   )  joined_dat <- left_join(panel_dat, meta_dat,   by = join_by(country, continent))  trell <- joined_dat |>   as_trelliscope_df() |>   write_panels() |>   add_meta_defs(     meta_href(       \"wiki_link\",       label = \"Wikipedia article on the country\",       tags = \"More Info\"     )   ) }"},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"number\" metadata variable","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"meta_number(   varname,   label = NULL,   tags = NULL,   digits = NULL,   locale = TRUE,   log = NULL )"},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"varname Name variable. label Description variable. tags Vector tag names help classify variable. digits many digits round displaying number. specified, value inferred. -1, digits shown. locale variable displayed using locale? example, 1234.56 US displayed 1,234.56. log variable's distribution shown log scale? specified, inference made based values.","code":""},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a ","text":"","code":"if (FALSE) { library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gapminder, aes(year, lifeExp)) +     geom_point() +     facet_panels(~country + continent)   ) |>   nest_panels()  meta_dat <- gapminder|>   group_by(country, continent) |>   summarise(     mean_lifeexp = mean(lifeExp),     min_lifeexp = min(lifeExp),     max_lifeexp = max(lifeExp),     mean_gdp = mean(gdpPercap),     first_year = min(year),     latitude = first(latitude),     longitude = first(longitude),     .groups = \"drop\"   ) |>   ungroup() |>   mutate(     first_date = as.Date(paste0(first_year, \"-01-01\")),     first_datetime = as.POSIXct.Date(first_date),     continent = as.factor(continent),     wiki_link = paste0(\"https://en.wikipedia.org/wiki/\", country)   )  joined_dat <- left_join(panel_dat, meta_dat,   by = join_by(country, continent))  trell <- joined_dat |>   as_trelliscope_df() |>   write_panels() |>   add_meta_defs(     meta_number(       \"mean_lifeexp\",       label = \"Average life expectancy across all measured years\",       tags = \"More Info\",       digits = 2     )   ) }"},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"string\" metadata variable","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"meta_string(varname, label = NULL, tags = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"varname Name variable. label Description variable. tags Vector tag names help classify variable.","code":""},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/meta_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a ","text":"","code":"if (FALSE) { library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gapminder, aes(year, lifeExp)) +     geom_point() +     facet_panels(~country + continent)   ) |>   nest_panels()  meta_dat <- gapminder|>   group_by(country, continent) |>   summarise(     mean_lifeexp = mean(lifeExp),     min_lifeexp = min(lifeExp),     max_lifeexp = max(lifeExp),     mean_gdp = mean(gdpPercap),     first_year = min(year),     latitude = first(latitude),     longitude = first(longitude),     .groups = \"drop\"   ) |>   ungroup() |>   mutate(     first_date = as.Date(paste0(first_year, \"-01-01\")),     first_datetime = as.POSIXct.Date(first_date),     continent = as.factor(continent),     wiki_link = paste0(\"https://en.wikipedia.org/wiki/\", country)   )  joined_dat <- left_join(panel_dat, meta_dat,   by = join_by(country, continent))  trell <- joined_dat |>   as_trelliscope_df() |>   write_panels() |>   add_meta_defs(     meta_string(       \"country\",       label = \"Name of the Country\",       tags = \"More Info\"     )   ) }"},{"path":"https://trelliscope.github.io/trelliscope/reference/nest_panels.html","id":null,"dir":"Reference","previous_headings":"","what":"Render the panels of a trelliscope display — nest_panels","title":"Render the panels of a trelliscope display — nest_panels","text":"Render panels trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/nest_panels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render the panels of a trelliscope display — nest_panels","text":"","code":"nest_panels(   x,   data_col = \"data\",   panel_col = \"panel\",   unnest_cols = NULL,   as_plotly = FALSE,   plotly_args = NULL,   plotly_cfg = NULL )"},{"path":"https://trelliscope.github.io/trelliscope/reference/nest_panels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render the panels of a trelliscope display — nest_panels","text":"x ggplot object created facet_panels(). data_col name column store nested data . panel_col name column store rendered panels . unnest_cols optional vector extra variable names x nested data. specified, vary within combination specified facet variables. as_plotly panels written plotly objects? plotly_args optional named list arguments send ggplotly plotly_cfg optional named list arguments send plotly's `config`` method.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_filters.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a filter state specifications to a trelliscope display — set_default_filters","title":"Add a filter state specifications to a trelliscope display — set_default_filters","text":"Add filter state specifications trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_filters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a filter state specifications to a trelliscope display — set_default_filters","text":"","code":"set_default_filters(trdf, ..., add = TRUE)"},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_filters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a filter state specifications to a trelliscope display — set_default_filters","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . ... Filter state specifications (e.g. filter_string(), filter_range()). add existing filter state specifications added ? Default TRUE. FALSE, entire sort specification overridden.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a labels state specification to a trelliscope display — set_default_labels","title":"Add a labels state specification to a trelliscope display — set_default_labels","text":"Add labels state specification trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a labels state specification to a trelliscope display — set_default_labels","text":"","code":"set_default_labels(trdf, varnames)"},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a labels state specification to a trelliscope display — set_default_labels","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . varnames vector variable names whose values appear labels. NULL, labels displayed. viewing display.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a layout state specification to a trelliscope display — set_default_layout","title":"Add a layout state specification to a trelliscope display — set_default_layout","text":"Add layout state specification trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a layout state specification to a trelliscope display — set_default_layout","text":"","code":"set_default_layout(trdf, ncol = 1, page = 1)"},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a layout state specification to a trelliscope display — set_default_layout","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . ncol Number columns panels show. page page number show.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_sort.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a labels state specification to a trelliscope display — set_default_sort","title":"Add a labels state specification to a trelliscope display — set_default_sort","text":"Add labels state specification trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_sort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a labels state specification to a trelliscope display — set_default_sort","text":"","code":"set_default_sort(trdf, varnames, dirs = \"asc\", add = FALSE)"},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_sort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a labels state specification to a trelliscope display — set_default_sort","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . varnames vector variable names sort . dirs vector directions sort (\"asc\" \"desc\"). add existing sort specification added ? FALSE (default), entire sort specification overridden.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/show_info.html","id":null,"dir":"Reference","previous_headings":"","what":"View trelliscope info of a trelliscope data frame — show_info","title":"View trelliscope info of a trelliscope data frame — show_info","text":"View trelliscope info trelliscope data frame","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/show_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View trelliscope info of a trelliscope data frame — show_info","text":"","code":"show_info(trdf)"},{"path":"https://trelliscope.github.io/trelliscope/reference/show_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View trelliscope info of a trelliscope data frame — show_info","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast .","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/show_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View trelliscope info of a trelliscope data frame — show_info","text":"","code":"if (FALSE) { library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gapminder, aes(year, lifeExp)) +     geom_point() +     facet_panels(~country + continent)   ) |>   nest_panels()  trell <- panel_dat |>   as_trelliscope_df(name = \"life expectancy\", path = \"gapminder\") |>   set_default_layout(nrow = 2, ncol = 4)  show_info(trell) }"},{"path":"https://trelliscope.github.io/trelliscope/reference/state_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"labels\" state","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/state_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"state_labels(varnames = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/state_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"varnames vector variable names whose values appear labels. NULL, labels displayed. viewing display.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/state_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"layout\" state","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/state_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"state_layout(ncol = 1, page = 1)"},{"path":"https://trelliscope.github.io/trelliscope/reference/state_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"ncol Number columns panels show. page page number show.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/state_sort.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"sort\" state","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/state_sort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"state_sort(varname, dir = \"asc\")"},{"path":"https://trelliscope.github.io/trelliscope/reference/state_sort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"varname name variable sort . dir One \"asc\" \"desc\", describing direction sort.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/trelliscope-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for trelliscope — trelliscope-shiny","title":"Shiny bindings for trelliscope — trelliscope-shiny","text":"Output render functions using trelliscope within Shiny applications interactive Rmd documents.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/trelliscope-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for trelliscope — trelliscope-shiny","text":"","code":"trelliscopeOutput(outputId, ...)  renderTrelliscope(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://trelliscope.github.io/trelliscope/reference/trelliscope-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for trelliscope — trelliscope-shiny","text":"outputId output variable read ... Argumentsed passed shiny::htmlOutput() useful want save expression variable. expr expression generates trelliscope env environment evaluate expr. quoted expr quoted expression (quote())? ","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/update_display_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the list of all displays in an app directory — update_display_list","title":"Update the list of all displays in an app directory — update_display_list","text":"Update list displays app directory","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/update_display_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the list of all displays in an app directory — update_display_list","text":"","code":"update_display_list(app_path, jsonp = TRUE, id)"},{"path":"https://trelliscope.github.io/trelliscope/reference/update_display_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the list of all displays in an app directory — update_display_list","text":"app_path path displays stored jsonp true, files read written \"jsonp\" format, otherwise \"json\" format. \"jsonp\" format makes possible browse trelliscope app without need web server. id id display. Can found config.json[p].","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/view_trelliscope.html","id":null,"dir":"Reference","previous_headings":"","what":"View a trelliscope display — view_trelliscope","title":"View a trelliscope display — view_trelliscope","text":"View trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/view_trelliscope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View a trelliscope display — view_trelliscope","text":"","code":"view_trelliscope(trdf = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/view_trelliscope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View a trelliscope display — view_trelliscope","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast .","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/view_trelliscope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View a trelliscope display — view_trelliscope","text":"","code":"if (FALSE) { library(ggplot2)  panel_dat <- (   ggplot(gapminder, aes(year, lifeExp)) +     geom_point() +     facet_panels(~country + continent) ) |>   nest_panels()  disp <- panel_dat |>   as_trelliscope_df(name = \"life_expectancy\") |>   write_panels() |>   write_trelliscope() |>   view_trelliscope()  # Alternatively you can build your trelliscope and call `view_trelliscope()` # separately. This allows for fine tuning of the trelliscope without having # to reopen it every time you make an edit. trell <- (   ggplot(gapminder, aes(year, lifeExp)) +     geom_point() +     facet_panels(~country + continent) ) |>   nest_panels() |>   as_trelliscope_df(name = \"life_expectancy\") |>   write_panels() |>   write_trelliscope()  view_trelliscope(trell) }"},{"path":"https://trelliscope.github.io/trelliscope/reference/write_panels.html","id":null,"dir":"Reference","previous_headings":"","what":"Write panels — write_panels","title":"Write panels — write_panels","text":"Write panels","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/write_panels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write panels — write_panels","text":"","code":"write_panels(   trdf,   width = 500,   height = 500,   format = \"png\",   force = FALSE,   ... )"},{"path":"https://trelliscope.github.io/trelliscope/reference/write_panels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write panels — write_panels","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . width Width pixels panel. height Height pixels panel. format format image htmlwidget. Can either \"png\" \"svg\". force panels forced written? FALSE, content panel column along width, height, format parameters used determine panel content matches panels already written, case writing panels skipped. ... arguments passed plotting functions (either svglite::svglite grDevices::png).","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/write_panels.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Write panels — write_panels","text":"size panels vary shown viewer, specification height width help determine plot aspect ratio well initial resolution render plot text, etc. .","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/write_panels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write panels — write_panels","text":"","code":"if (FALSE) { library(ggplot2)  panel_dat <- (   ggplot(gapminder, aes(year, lifeExp)) +     geom_point() +     facet_panels(~country + continent)   ) |>   nest_panels()  disp <- panel_dat |>   as_trelliscope_df(name = \"life_expectancy\", path = tempfile()) |>   write_panels(width = 800, height = 500, format = \"svg\") }"},{"path":"https://trelliscope.github.io/trelliscope/reference/write_trelliscope.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the contents of a display — write_trelliscope","title":"Write the contents of a display — write_trelliscope","text":"Write contents display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/write_trelliscope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the contents of a display — write_trelliscope","text":"","code":"write_trelliscope(trdf, force_write = FALSE, jsonp = TRUE)"},{"path":"https://trelliscope.github.io/trelliscope/reference/write_trelliscope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the contents of a display — write_trelliscope","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . force_write panels forced written even already written? jsonp true, app files written \"jsonp\" format, otherwise \"json\" format. \"jsonp\" format makes possible browse trelliscope app without need web server.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/write_trelliscope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write the contents of a display — write_trelliscope","text":"","code":"if (FALSE) { library(ggplot2)  panel_dat <- (   ggplot(gapminder, aes(year, lifeExp)) +     geom_point() +     facet_panels(~country + continent)   ) |>   nest_panels()  disp <- panel_dat |>   as_trelliscope_df(name = \"life_expectancy\", path = tempfile()) |>   write_panels() |>   write_trelliscope() |>   view_trelliscope() }"}]
